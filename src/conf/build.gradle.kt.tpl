/*****************************/
// !!!  AUTOGENERATED FILE  !!!
// !!! DO NOT EDIT MANUALLY !!!
/*****************************/

import com.google.protobuf.gradle.*
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
    id("org.jetbrains.kotlin.jvm") version "%%kotlin-version%%"
    id("com.google.protobuf") version "0.9.4"

    `java-library`
    `kotlin-dsl`
}

val javaVersion = JavaVersion.VERSION_17
java {
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    // withSourcesJar()
}

tasks.withType<org.jetbrains.kotlin.gradle.tasks.KotlinCompile> {
	// Do not use, no effect; will be overridden by kotlinDslPluginOptions.jvmTarget, see KotlinDslCompilerPlugins.
	kotlinOptions.jvmTarget = javaVersion.toString()
}

repositories {
    mavenCentral() 
}

dependencies {
%%dependencies%%
}

sourceSets {
    main {
        java {
            setSrcDirs(listOf(
                "src/kotlin",
                "build/generated/source/proto/main",
            ))
            setExcludes(listOf("**/test/*.kt"))
        }
        proto.setSrcDirs(listOf("gradlegen/proto"))
    }
    /*test {
        java {
            setSrcDirs(listOf("src/kotlin"))
            setIncludes(listOf("**/test/*.kt"))
        }
    }*/
}

tasks.withType<KotlinCompile> {
    dependsOn(tasks.named("generateProto"))
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:%%protobuf-verson%%"
    }
    plugins {
        id("grpc") {
            artifact = "io.grpc:protoc-gen-grpc-java:%%grpc-version%%"
        }
        id("grpckt") {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:%%grpc-kotlin-version%%:jdk8@jar"
        }
    }
    generateProtoTasks {
        all().forEach {
            it.plugins {
                create("grpc")
                create("grpckt")
            }
            it.builtins {
                create("kotlin")
            }
        }
    }
}